#!/usr/bin/env bash
# shellcheck disable=SC1091,SC2001

shopt -s extglob
source /uny/git/unypkg/help
source /uny/git/unypkg/fn

function update_unypkg {
    git -C /uny/git/unypkg reset --hard HEAD
    git -C /uny/git/unypkg pull
    chmod +x /uny/git/unypkg/bin/{unyp,unyc}
}

function install_packages {
    packages=("$@")
    for pkgopt in "${packages[@]}"; do
        if [[ $pkgopt == *'/'* ]]; then
            pkg="$(echo "$pkgopt" | sed "s|/.*$||")"
            pkgver="$(echo "$pkgopt" | sed "s|^.*/||")"
        else
            pkg="$pkgopt"
            pkgver=""
        fi

        #release_url="$(wget -q --server-response https://github.com/unypkg/"$pkg"/releases/"$pkg_release" -O- 2>&1 | grep "Location" | sed "s|  Location: ||")"
        #download_url="${release_url//\/tag\//\/download\/}/unypkg-$pkg.tar.xz"

        if [[ $(wget -q --server-response https://github.com/unypkg/"$pkg" 2>&1 | grep HTTP | sed -e "s|[[:space:]]*HTTP/[0-9.]*[[:space:]]||" -e "s|[[:space:]]OK||") != 200 ]]; then
            echo "unypkg repo https://github.com/unypkg/$pkg does not seem to exist. Aborting." && exit
        fi

        pkg_release="$(git ls-remote --refs --tags --sort="v:refname" https://github.com/unypkg/"$pkg" refs/tags/"$pkgver"* | tail -n1 | sed "s|.*refs/tags/||")"
        [[ -z $pkg_release ]] && echo "There is no release for the package $pkg with that version. Aborting." && exit
        download_url="https://github.com/unypkg/$pkg/releases/download/$pkg_release"
        echo "Downloading and installing: $pkg $pkg_release"
        wget -q "$download_url/unypkg-$pkg.tar.xz" -O- | tar xJ -C /uny/pkg

        # Add to paths files
        for usrpath in /uny/pkg/"$pkg"/*/!(vdet|rdep); do
            pkgver="$(echo "$usrpath" | sed -e "s|.*$pkg/||" -e "s|/.*||")"
            pathtype="$(basename "$usrpath")"
            [[ ! -f /uny/uny/paths/$pathtype ]] && touch /uny/uny/paths/"$pathtype"
            if grep -q "/$pkg/[^/:]*" /uny/uny/paths/"$pathtype"; then
                sed "s+/$pkg/[^/:]*+/$pkg/$pkgver+" -i /uny/uny/paths/"$pathtype"
            else
                [[ ! $pkg == "glibc" ]] && delim=":" || delim=""
                echo -n "$delim/uny/pkg/$pkg/$pkgver/$pathtype" >>/uny/uny/paths/"$pathtype"
            fi
        done
    done
}

function list_packages {
    ls /uny/pkg/*
}

if [[ $1 =~ (i|inst|install) ]]; then
    shift
    install_packages "$@"
elif [[ $1 =~ (l|ls|list) ]]; then
    list_packages "$@"
elif [[ $1 =~ (uu|upduny|"update-unypkg") ]]; then
    update_unypkg
else
    print_help_unyp
fi
