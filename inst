#!/usr/bin/env bash

# Check to be root
if [[ $EUID -gt 0 ]]; then
    echo "This needs to be run as root user. Not root, exiting..."
    exit
fi

# Check if git is installed
git --version 2>&1 >/dev/null
git_installed=$?
if [[ ! $git_installed -eq 0 ]]; then
    echo "Git has to be installed. Exiting..."
    exit
fi

# Check if /uny folder already exists
if [[ -d /uny ]]; then
    echo "/uny folder already exists. Exiting..."
    exit
fi

##############################################################################################################
### Reusable uny chroot with unyc command
cat >/bin/unyc <<'EOFUNYC'
#!/usr/bin/env bash

cat <<EOF

Mounting virtual file systems and entering uny's chroot

#######################################################
### Welcome to uny's chroot ###########################
#######################################################

EOF
mount --bind /dev $UNY/dev         #>/dev/null
mount --bind /dev/pts $UNY/dev/pts #>/dev/null
mount -t proc proc $UNY/proc       #>/dev/null
mount -t sysfs sysfs $UNY/sys      #>/dev/null
mount -t tmpfs tmpfs $UNY/run      #>/dev/null

if [ -h $UNY/dev/shm ]; then
    mkdir -pv $UNY/"$(readlink $UNY/dev/shm)"
else
    mount -t tmpfs -o nosuid,nodev tmpfs $UNY/dev/shm
fi

UNY_PATH="$(cat /uny/uny/paths/bin):$(cat /uny/uny/paths/sbin):/usr/bin:/usr/sbin"
chroot "$UNY" /usr/bin/env -i \
    HOME=/uny/root \
    TERM="$TERM" \
    PS1='uny | \u:\w\$ ' \
    PATH="$UNY_PATH" \
    bash --login

cat <<EOF

Exited uny's chroot and unmounting virtual file systems

#######################################################
### See you soon ######################################
#######################################################

EOF

mountpoint -q $UNY/dev/shm && umount $UNY/dev/shm
umount $UNY/dev/pts
umount $UNY/{sys,proc,run,dev}
EOFUNYC
chmod +x /bin/unyc

##############################################################################################################
# Making and populating the /uny subfolder
mkdir -pv /uny/git
cd /uny || exit

if [[ "$1" == "buildsys" ]]; then
    base_release_url="$(curl -Ls -o /dev/null -w "%{url_effective}" https://github.com/unypkg/base/releases/latest)"
    base_download_url="$(echo "$base_release_url" | sed -e "s|/tag/|/download/|" -e "s|\([^/]*$\)|\1/unypkg-base-\1.tar.xz|")"
    curl -s -L "$base_download_url" | tar xvJ
fi

cd /uny/git || exit
git clone -b release https://github.com/unypkg/unypkg

ln -s /uny/git/unypkg/bin/unyp /bin/unyp
